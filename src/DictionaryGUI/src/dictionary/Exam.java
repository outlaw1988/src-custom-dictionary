/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionary;

import java.io.*;
import java.util.*;
import javax.swing.JOptionPane;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author jakub
 */
public class Exam extends javax.swing.JFrame {

    /**
     * Creates new form Exam
     */
    public Exam() {
        initComponents();
    }
    
    public Exam(String category) {
        initComponents();
        
        this.category = category;
        
        readJsonFile();
        getWordsLists();
        createShuffledIndList();
        performExam();
    }

    private void readJsonFile() {
    
        JSONParser parser = new JSONParser();
        
        try {
            Object obj = parser.parse(new FileReader("wordsSet.json"));
            this.jsonObj = (JSONObject) obj;
        }
        catch(FileNotFoundException e) { e.printStackTrace(); }
        catch(IOException e) { e.printStackTrace(); }
        catch(ParseException e) { e.printStackTrace(); }
        catch(Exception e) { e.printStackTrace(); }
        
    }
    
    private void getWordsLists() {
        
        JSONObject categoryObj = (JSONObject)this.jsonObj.get(this.category);
        this.wordsToTranslate = (ArrayList<String>)categoryObj.get("words1");
        this.answers = (ArrayList<String>)categoryObj.get("words2");
        
    }
    
    private void createShuffledIndList() {
    
        int len = this.wordsToTranslate.size();
        
        for (int i = 0; i < len; i++) {
            this.shuffledInd.add(i);
        }
        
        Collections.shuffle(this.shuffledInd);
    }
    
    private void performExam() {
        
        this.questionNum += 1;
        int currInd = shuffledInd.get(this.questionNum);
        
        String wordToTranslate = this.wordsToTranslate.get(currInd);
        wordToTrans.setText(wordToTranslate);
        
        this.rightAnswer = this.answers.get(currInd);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transWordLab = new javax.swing.JLabel();
        wordToTrans = new javax.swing.JLabel();
        transTextField = new javax.swing.JTextField();
        nextButt = new javax.swing.JButton();
        okOrFailLab = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Interactive dictionary");

        transWordLab.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        transWordLab.setText("Transalte word:");

        wordToTrans.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        transTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        transTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transTextFieldActionPerformed(evt);
            }
        });

        nextButt.setText("Next");
        nextButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtActionPerformed(evt);
            }
        });

        okOrFailLab.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(transWordLab))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(wordToTrans, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(okOrFailLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(nextButt))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(transTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(transWordLab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordToTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(okOrFailLab, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nextButt)
                .addContainerGap(215, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void transTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transTextFieldActionPerformed
        this.currAnswer = transTextField.getText();
        
         if (this.currAnswer.equals(this.rightAnswer)) {
             okOrFailLab.setText("OK");
             this.corrNum += 1;
         }
         else {
             okOrFailLab.setText("FAIL");
         }
        
    }//GEN-LAST:event_transTextFieldActionPerformed

    private void nextButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtActionPerformed
        transTextField.setText("");
        okOrFailLab.setText("");
        if (this.questionNum < (this.wordsToTranslate.size() - 1)) {
            performExam();
        }
        else {
            System.out.println("Your score is: " + this.corrNum);
            int percentCorr = (int)(((float)this.corrNum / (float)this.wordsToTranslate.size()) * 100.0);
            JOptionPane.showMessageDialog(this, "Your score is: " + percentCorr + " %");
        }
    }//GEN-LAST:event_nextButtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Exam().setVisible(true);
            }
        });
    }

    //TODO Add revertable translation polish -> english, english -> polish
    private JSONObject jsonObj;
    private String category;
    private ArrayList<String> wordsToTranslate;
    private ArrayList<String> answers;
    private String currAnswer;
    private String rightAnswer;
    private List<Integer> shuffledInd = new ArrayList<>();
    private int questionNum = -1;
    private int corrNum = 0;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton nextButt;
    private javax.swing.JLabel okOrFailLab;
    private javax.swing.JTextField transTextField;
    private javax.swing.JLabel transWordLab;
    private javax.swing.JLabel wordToTrans;
    // End of variables declaration//GEN-END:variables
}
